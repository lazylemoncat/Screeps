{"code":"import { globalStructure } from \"../global/GlobalStructure\";\r\nimport { newCreepBody } from \"../NewCreep/NewCreepBodys\";\r\nimport { roleHarvester } from \"../Role/RoleHarvester\";\r\nimport { roleTransfer } from \"../Role/RoleTransfer\";\r\nexport const harvestTask = {\r\n    run: function () {\r\n        newCreep();\r\n        for (let i = 0; i < Memory.roles.harvesters.length; ++i) {\r\n            roleHarvester.run(Game.getObjectById(Memory.roles.harvesters[i]));\r\n        }\r\n        for (let i = 0; i < Memory.roles.transfers.length; ++i) {\r\n            roleTransfer.run(Game.getObjectById(Memory.roles.transfers[i]));\r\n        }\r\n    }\r\n};\r\nfunction newCreep() {\r\n    let harvesters = Memory.roles.harvesters;\r\n    let transfers = Memory.roles.harvesters;\r\n    let sources = globalStructure.sources;\r\n    Game.spawns['Spawn1'].memory.shouldSpawn = null;\r\n    if (harvesters.length <= transfers.length && harvesters.length < sources.length) {\r\n        Game.spawns['Spawn1'].memory.shouldSpawn = 'harvester';\r\n        newHarvester(harvesters);\r\n    }\r\n    else if (harvesters.length > transfers.length && transfers.length < sources.length) {\r\n        Game.spawns['Spawn1'].memory.shouldSpawn = 'transfer';\r\n        newTransfer(transfers);\r\n    }\r\n}\r\nfunction newHarvester(harvesters) {\r\n    let newName = \"Harvester\" + Game.time;\r\n    let sourcesLength = globalStructure.sources.length;\r\n    let posFlag = 0;\r\n    for (let i = 0; i < sourcesLength; ++i) {\r\n        for (let j = 0; j < harvesters.length; ++j) {\r\n            if (i == Game.getObjectById(harvesters[j]).memory.sourcesPosition) {\r\n                posFlag += 1;\r\n                break;\r\n            }\r\n        }\r\n        if (posFlag == i)\r\n            break;\r\n    }\r\n    if (posFlag >= sourcesLength)\r\n        return;\r\n    Game.spawns['Spawn1'].spawnCreep(newCreepBody('harvester'), newName, { memory: { role: 'harvester', sourcesPosition: posFlag } });\r\n}\r\nfunction newTransfer(transfers) {\r\n    let newName = 'Transfer' + Game.time;\r\n    let sourcesLength = globalStructure.sources.length;\r\n    let posFlag = 0;\r\n    for (let i = 0; i < sourcesLength; ++i) {\r\n        for (let j = 0; j < transfers.length; ++j) {\r\n            if (Game.getObjectById(transfers[j]).memory.sourcesPosition == i) {\r\n                posFlag += 1;\r\n                break;\r\n            }\r\n        }\r\n        if (posFlag == i)\r\n            break;\r\n    }\r\n    if (posFlag >= sourcesLength)\r\n        return;\r\n    Game.spawns['Spawn1'].spawnCreep(newCreepBody('transfer'), newName, { memory: {\r\n            role: 'transfer', sourcesPosition: posFlag,\r\n        } });\r\n}\r\n//# sourceMappingURL=HarvestTask.js.map","references":["D:/Desktop/ScreepsCodes/World/src/global/GlobalStructure.ts","D:/Desktop/ScreepsCodes/World/src/NewCreep/NewCreepBodys.ts","D:/Desktop/ScreepsCodes/World/src/Role/RoleHarvester.ts","D:/Desktop/ScreepsCodes/World/src/Role/RoleTransfer.ts"],"map":"{\"version\":3,\"file\":\"HarvestTask.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Tasks/HarvestTask.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAC5D,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAEpD,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,GAAG,EAAE;QACH,QAAQ,EAAE,CAAC;QAEX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACvD,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACnE;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACtD,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;IACH,CAAC;CACF,CAAA;AAED,SAAS,QAAQ;IACf,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;IACzC,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;IACxC,IAAI,OAAO,GAAG,eAAe,CAAC,OAAO,CAAC;IACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;IAChD,IAAI,UAAU,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QACvD,YAAY,CAAC,UAAU,CAAC,CAAC;KAC1B;SAAM,IAAI,UAAU,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QACpF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC;QACtD,WAAW,CAAC,SAAS,CAAC,CAAC;KACxB;AACH,CAAC;AAED,SAAS,YAAY,CAAC,UAAuB;IAC3C,IAAI,OAAO,GAAW,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAI,aAAa,GAAW,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC;IAC3D,IAAI,OAAO,GAAW,CAAC,CAAC;IACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,EAAE,CAAC,EAAE;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAC1C,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,eAAe,EAAE;gBACjE,OAAO,IAAI,CAAC,CAAC;gBACb,MAAM;aACP;SACF;QACD,IAAI,OAAO,IAAI,CAAC;YAAE,MAAM;KACzB;IACD,IAAI,OAAO,IAAI,aAAa;QAAE,OAAO;IAErC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,EACxD,OAAO,EAAE,EAAC,MAAM,EAAC,EAAC,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,OAAO,EAAC,EAAC,CAAC,CAAC;AACrE,CAAC;AAED,SAAS,WAAW,CAAC,SAAsB;IACzC,IAAI,OAAO,GAAW,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;IAC7C,IAAI,aAAa,GAAW,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC;IAC3D,IAAI,OAAO,GAAW,CAAC,CAAC;IACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,EAAE,CAAC,EAAE;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACzC,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,eAAe,IAAI,CAAC,EAAE;gBAChE,OAAO,IAAI,CAAC,CAAC;gBACb,MAAM;aACP;SACF;QACD,IAAI,OAAO,IAAI,CAAC;YAAE,MAAM;KACzB;IACD,IAAI,OAAO,IAAI,aAAa;QAAE,OAAO;IAErC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE;YAC3E,IAAI,EAAE,UAAU,EAAE,eAAe,EAAE,OAAO;SAAE,EAAC,CAAC,CAAC;AACnD,CAAC\"}"}
