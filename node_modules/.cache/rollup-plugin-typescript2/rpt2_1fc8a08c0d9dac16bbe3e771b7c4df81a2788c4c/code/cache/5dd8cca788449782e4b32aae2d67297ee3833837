{"code":"import { globalStructure } from \"@/global/GlobalStructure\";\r\nimport { newCreepBody } from \"../NewCreep/NewCreepBodys\";\r\nexport const roleHarvester = {\r\n    run: function (creep) {\r\n        // if harvester went into the wrong room\r\n        if (!creep.memory.harvesting && creep.store[RESOURCE_ENERGY] == 0) {\r\n            creep.memory.harvesting = true;\r\n        }\r\n        else if (creep.memory.harvesting && creep.store.getFreeCapacity() == 0) {\r\n            if (transfer(creep) != true) {\r\n                creep.memory.harvesting = false;\r\n            }\r\n        }\r\n        // if harvester's free capacity more than 0, harvest energy\r\n        if (creep.memory.harvesting) {\r\n            goHarvest(creep);\r\n        }\r\n        else {\r\n            transferEnergy(creep);\r\n        }\r\n        if (creep.ticksToLive <= 30 && !creep.memory.dying) {\r\n            newOne(creep);\r\n        }\r\n    }\r\n};\r\nfunction backRoom(creep) {\r\n    if (creep.room != Game.spawns[\"Spawn1\"].room) {\r\n        creep.moveTo(Game.spawns[\"Spawn1\"]);\r\n        return 0;\r\n    }\r\n    else {\r\n        return -1;\r\n    }\r\n}\r\nfunction goHarvest(creep) {\r\n    let targetSource = globalStructure.sources[creep.memory.sourcesPosition];\r\n    if (targetSource.energy == 0)\r\n        return;\r\n    let container = globalStructure.containers.filter(structure => structure.pos.isNearTo(targetSource));\r\n    if (container[0] != undefined) {\r\n        if (container[0].store.getFreeCapacity(RESOURCE_ENERGY) == 0 &&\r\n            creep.getActiveBodyparts(CARRY) == 0) {\r\n            return;\r\n        }\r\n        if (!creep.pos.isEqualTo(container[0]) &&\r\n            creep.pos.isNearTo(targetSource)) {\r\n            creep.moveTo(container[0]);\r\n            return;\r\n        }\r\n    }\r\n    if (creep.harvest(targetSource) == ERR_NOT_IN_RANGE) {\r\n        if (global.harvestPath[creep.memory.sourcesPosition] == undefined) {\r\n            global.harvestPath[creep.memory.sourcesPosition] = creep.room.findPath(creep.pos, targetSource.pos);\r\n        }\r\n        creep.moveByPath(global.harvestPath[creep.memory.sourcesPosition]);\r\n    }\r\n}\r\nfunction transferEnergy(creep) {\r\n    let source = globalStructure.sources[creep.memory.sourcesPosition];\r\n    if (globalStructure.fromLinks[0] != undefined && creep.getActiveBodyparts(CARRY) >= 1) {\r\n        let link = creep.pos.findInRange(globalStructure.fromLinks, 3);\r\n        if (link[0] != undefined) {\r\n            let target = Game.getObjectById(link[0].id);\r\n            if (target.store.getFreeCapacity(RESOURCE_ENERGY) >= 0) {\r\n                if (creep.transfer(link[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                    creep.moveTo(link[0]);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    let container = source.pos.findInRange(globalStructure.containers, 1)[0];\r\n    if (container != undefined && container.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n        if (creep.transfer(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(container);\r\n        }\r\n        return;\r\n    }\r\n    let structures = creep.room.find(FIND_STRUCTURES, {\r\n        filter: (structure) => {\r\n            return (structure.structureType == STRUCTURE_STORAGE ||\r\n                structure.structureType == STRUCTURE_CONTAINER ||\r\n                structure.structureType == STRUCTURE_EXTENSION ||\r\n                structure.structureType == STRUCTURE_SPAWN ||\r\n                structure.structureType == STRUCTURE_TOWER)\r\n                && structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\r\n        }\r\n    });\r\n    let transferTo = structures.filter(structure => structure.structureType == STRUCTURE_EXTENSION);\r\n    let target;\r\n    if (transferTo[0] == undefined) {\r\n        target = creep.pos.findClosestByPath(structures);\r\n    }\r\n    else {\r\n        target = creep.pos.findClosestByPath(transferTo);\r\n    }\r\n    if (creep.transfer(target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(target);\r\n    }\r\n}\r\nfunction newOne(creep) {\r\n    let spawns = creep.room.find(FIND_STRUCTURES, { filter: structure => structure.structureType == STRUCTURE_SPAWN });\r\n    let newName = 'Harvester' + Game.time;\r\n    let error = Game.spawns[spawns[0].name].spawnCreep(newCreepBody('harvester'), newName, { memory: { role: 'harvester', sourcesPosition: creep.memory.sourcesPosition } });\r\n    if (error == OK) {\r\n        creep.memory.dying = true;\r\n    }\r\n}\r\nfunction transfer(creep) {\r\n    let link = creep.pos.findInRange(globalStructure.fromLinks, 1)[0];\r\n    if (link != undefined) {\r\n        if (creep.transfer(link, RESOURCE_ENERGY) == OK) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        let source = globalStructure.sources[creep.memory.sourcesPosition];\r\n        let container = globalStructure.containers.filter(structure => structure.pos.isNearTo(source))[0];\r\n        if (container != undefined) {\r\n            if (creep.transfer(container, RESOURCE_ENERGY) == OK) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=RoleHarvester.js.map","references":["D:/Desktop/ScreepsCodes/World/src/global/GlobalStructure.ts","D:/Desktop/ScreepsCodes/World/src/NewCreep/NewCreepBodys.ts"],"map":"{\"version\":3,\"file\":\"RoleHarvester.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Role/RoleHarvester.ts\"],\"names\":[],\"mappings\":\"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\"}"}
