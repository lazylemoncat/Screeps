{"code":"import { globalRole } from \"@/global/GlobalRole\";\r\nimport { globalStructure } from \"@/global/GlobalStructure\";\r\nexport const roleTransfer = {\r\n    run: function (creep) {\r\n        if (creep.memory.transfering && creep.store[RESOURCE_ENERGY] == 0) {\r\n            creep.memory.transfering = false;\r\n        }\r\n        if (!creep.memory.transfering && creep.store.getFreeCapacity() == 0) {\r\n            creep.memory.transfering = true;\r\n        }\r\n        if (creep.memory.transfering) {\r\n            goTransfer(creep);\r\n        }\r\n        else {\r\n            let source = globalStructure.sources[creep.memory.sourcesPosition];\r\n            if (globalRole.transferTarget[0] != undefined) {\r\n                let target = source.pos.findInRange(FIND_CREEPS, 1, { filter: creep => creep.memory.role == 'harvester' })[0];\r\n                let targetId = globalRole.transferTarget.indexOf(target.id);\r\n                creep.memory.transferTarget = globalRole.transferTarget[targetId];\r\n            }\r\n            if (creep.memory.transferTarget != undefined) {\r\n                let res = creep.transferTo(Game.getObjectById(creep.memory.transferTarget), creep);\r\n                if (res == ERR_NOT_IN_RANGE) {\r\n                    creep.moveTo(Game.getObjectById(creep.memory.transferTarget));\r\n                    return;\r\n                }\r\n                else if (res == OK) {\r\n                    creep.memory.transferTarget = undefined;\r\n                }\r\n            }\r\n            if (creep.pos.getRangeTo(source) > 2) {\r\n                creep.moveTo(source);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction goTransfer(creep) {\r\n    let structures = creep.room.find(FIND_STRUCTURES);\r\n    let target = structures.filter(structure => (structure.structureType == STRUCTURE_EXTENSION ||\r\n        structure.structureType == STRUCTURE_SPAWN) &&\r\n        structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0);\r\n    if (target[0] != undefined) {\r\n        let temp = creep.pos.findInRange(target, 3)[0];\r\n        if (temp != undefined) {\r\n            target[0] = temp;\r\n        }\r\n        if (creep.transfer(target[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(target[0]);\r\n        }\r\n        return;\r\n    }\r\n    target = structures.filter(structure => (structure.structureType == STRUCTURE_TOWER) &&\r\n        structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0);\r\n    if (target[0] != undefined) {\r\n        let temp = creep.pos.findInRange(target, 6)[0];\r\n        if (temp != undefined) {\r\n            target[0] = temp;\r\n        }\r\n        if (creep.transfer(target[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(target[0]);\r\n        }\r\n        return;\r\n    }\r\n    target = structures.filter(structure => ((structure.structureType == STRUCTURE_CONTAINER &&\r\n        structure.pos.isNearTo(structure.pos.findClosestByPath(FIND_SOURCES)) == false) ||\r\n        structure.structureType == STRUCTURE_STORAGE) &&\r\n        structure.store.getFreeCapacity(RESOURCE_ENERGY) >= creep.store[RESOURCE_ENERGY]);\r\n    if (creep.transfer(target[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(target[0]);\r\n    }\r\n}\r\nfunction goWithdraw(creep) {\r\n    let resources = creep.room.find(FIND_DROPPED_RESOURCES);\r\n    let resource = resources.filter(resource => resource.pos.inRangeTo(globalStructure.sources[creep.memory.sourcesPosition], 1) &&\r\n        resource.amount >= creep.store.getFreeCapacity(RESOURCE_ENERGY))[0];\r\n    if (resource != undefined) {\r\n        if (creep.pickup(resource) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(resource);\r\n        }\r\n        return;\r\n    }\r\n    if (globalStructure.toLinks.length > 0) {\r\n        let link = Game.getObjectById(globalStructure.toLinks[0].id);\r\n        if (link.store[RESOURCE_ENERGY] >= 100) {\r\n            if (creep.withdraw(link, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(link);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    let targetSource = globalStructure.sources[creep.memory.sourcesPosition];\r\n    let targetContainer = targetSource.pos.findClosestByPath(FIND_STRUCTURES, { filter: (structure) => (structure.structureType == STRUCTURE_CONTAINER) });\r\n    if (targetContainer == null ||\r\n        targetContainer.store[RESOURCE_ENERGY] <= creep.store.getFreeCapacity(RESOURCE_ENERGY)) {\r\n        targetContainer = creep.pos.findClosestByPath(FIND_STRUCTURES, { filter: (structure) => (structure.structureType == STRUCTURE_CONTAINER ||\r\n                structure.structureType == STRUCTURE_STORAGE) &&\r\n                structure.store[RESOURCE_ENERGY] >= creep.store.getFreeCapacity(RESOURCE_ENERGY)\r\n        });\r\n    }\r\n    if (creep.withdraw(targetContainer, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(targetContainer);\r\n    }\r\n}\r\n//# sourceMappingURL=RoleTransfer.js.map","references":["D:/Desktop/ScreepsCodes/World/src/global/GlobalRole.ts","D:/Desktop/ScreepsCodes/World/src/global/GlobalStructure.ts"],"map":"{\"version\":3,\"file\":\"RoleTransfer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Role/RoleTransfer.ts\"],\"names\":[],\"mappings\":\"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\"}"}
