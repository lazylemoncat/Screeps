{"code":"import { tasks } from \"../Tasks/Tasks\";\r\nimport { globalStructure } from \"../global/GlobalStructure\";\r\nexport const roleTransfer = {\r\n    isTransfering: function (creep) {\r\n        if (creep.memory.transfering && creep.store[RESOURCE_ENERGY] == 0) {\r\n            creep.memory.transfering = false;\r\n        }\r\n        if (!creep.memory.transfering && creep.store.getFreeCapacity() == 0) {\r\n            creep.memory.transfering = true;\r\n        }\r\n        return creep.memory.transfering;\r\n    },\r\n    goTransfer: function (creep, task) {\r\n        let target = Game.getObjectById(task);\r\n        if (target == null) {\r\n            return;\r\n        }\r\n        let type = target.structureType;\r\n        let res = 0;\r\n        res = creep.transfer(target, RESOURCE_ENERGY);\r\n        switch (res) {\r\n            case OK:\r\n                tasks.transferTasks[type].splice(tasks.transferTasks[type].indexOf(task), 1);\r\n                break;\r\n            case ERR_NOT_IN_RANGE:\r\n                creep.moveTo(target, { reusePath: 10 });\r\n                break;\r\n        }\r\n        return;\r\n    },\r\n    goWithdraw: function (creep, task) {\r\n        let target = Game.getObjectById(task);\r\n        if (target == null) {\r\n            tasks.withdrawTasks.splice(tasks.withdrawTasks.indexOf(task), 1);\r\n            return;\r\n        }\r\n        let res = 0;\r\n        if (target instanceof Creep) {\r\n            res = target.transfer(creep, RESOURCE_ENERGY);\r\n            switch (res) {\r\n                case OK:\r\n                    tasks.withdrawTasks.splice(tasks.withdrawTasks.indexOf(task), 1);\r\n                    break;\r\n                case ERR_NOT_IN_RANGE:\r\n                    creep.moveTo(target, { reusePath: 10 });\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            res = creep.withdraw(target, RESOURCE_ENERGY);\r\n            switch (res) {\r\n                case OK:\r\n                    tasks.withdrawTasks.splice(tasks.withdrawTasks.indexOf(task), 1);\r\n                    break;\r\n                case ERR_NOT_IN_RANGE:\r\n                    creep.moveTo(target, { reusePath: 10 });\r\n                    break;\r\n            }\r\n        }\r\n        return;\r\n    },\r\n};\r\nfunction goWithdraw(creep) {\r\n    let resources = creep.room.find(FIND_DROPPED_RESOURCES);\r\n    if (resources[0] != undefined) {\r\n        if (creep.pickup(resources[0]) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(resources[0]);\r\n        }\r\n        return;\r\n    }\r\n    let targetSource = globalStructure.sources[creep.memory.sourcesPosition];\r\n    if (globalStructure.toLinks.length > 0 &&\r\n        targetSource.pos.findInRange(globalStructure.fromLinks, 1).length != 0) {\r\n        let link = Game.getObjectById(globalStructure.toLinks[0].id);\r\n        if (link != null && link.store[RESOURCE_ENERGY] >= 100) {\r\n            if (creep.withdraw(link, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(link);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    let targetContainer = targetSource.pos.findInRange(globalStructure.containers, 1)[0];\r\n    if (targetContainer == null ||\r\n        targetContainer.store[RESOURCE_ENERGY] <= creep.store.getFreeCapacity(RESOURCE_ENERGY)) {\r\n        targetContainer = globalStructure.containers.filter(target => target.pos.findInRange(globalStructure.sources, 1)[0] != undefined &&\r\n            Game.getObjectById(target.id).store[RESOURCE_ENERGY] >= creep.store.getFreeCapacity(RESOURCE_ENERGY))[0];\r\n        if (targetContainer == undefined) {\r\n            targetContainer = creep.pos.findClosestByPath(FIND_STRUCTURES, { filter: (structure) => (structure.structureType == STRUCTURE_CONTAINER ||\r\n                    structure.structureType == STRUCTURE_STORAGE) &&\r\n                    structure.store[RESOURCE_ENERGY] >= creep.store.getFreeCapacity(RESOURCE_ENERGY)\r\n            });\r\n        }\r\n    }\r\n    if (creep.withdraw(targetContainer, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(targetContainer);\r\n    }\r\n}\r\n// goTransfer: function (creep: Creep): void {\r\n//   let structures: AnyStructure[] = creep.room.find(FIND_STRUCTURES);\r\n//   let target: AnyStructure[] = structures.filter(structure => \r\n//     (structure.structureType == STRUCTURE_EXTENSION ||\r\n//     structure.structureType == STRUCTURE_SPAWN) &&\r\n//     structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0 );\r\n//   if (target[0] != undefined) {\r\n//     let temp: AnyStructure = creep.pos.findInRange(target, 3)[0];\r\n//     if (temp != undefined) {\r\n//       target[0] = temp;\r\n//     }\r\n//     if (creep.transfer(target[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n//       creep.moveTo(target[0]);\r\n//     }\r\n//     return;\r\n//   }\r\n//   target = structures.filter(structure => \r\n//     (structure.structureType == STRUCTURE_TOWER) &&\r\n//     structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0);\r\n//   if (target[0] != undefined) {\r\n//     let temp: AnyStructure = creep.pos.findInRange(target, 6)[0];\r\n//     if (temp != undefined) {\r\n//       target[0] = temp;\r\n//     }\r\n//     if (creep.transfer(target[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n//       creep.moveTo(target[0]);\r\n//     }\r\n//     return;\r\n//   }\r\n//   target = structures.filter(structure =>\r\n//     ((structure.structureType == STRUCTURE_CONTAINER &&\r\n//     structure.pos.findInRange(globalStructure.sources, 1)[0] == undefined) ||\r\n//     structure.structureType == STRUCTURE_STORAGE) &&\r\n//     structure.store.getFreeCapacity(RESOURCE_ENERGY) >= creep.store[RESOURCE_ENERGY]);\r\n//   if (creep.transfer(target[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n//     creep.moveTo(target[0]);\r\n//   }\r\n// },\r\n//# sourceMappingURL=RoleTransfer.js.map","references":["D:/Desktop/ScreepsCodes/World/src/Tasks/Tasks.ts","D:/Desktop/ScreepsCodes/World/src/global/GlobalStructure.ts"],"map":"{\"version\":3,\"file\":\"RoleTransfer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Role/RoleTransfer.ts\"],\"names\":[],\"mappings\":\"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\"}"}
