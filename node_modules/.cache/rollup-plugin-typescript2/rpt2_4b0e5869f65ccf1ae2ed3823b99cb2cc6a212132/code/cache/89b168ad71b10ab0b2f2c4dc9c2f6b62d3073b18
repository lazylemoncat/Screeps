{"code":"import { globalStructure } from \"@/global/GlobalStructure\";\r\nimport { newCreepBody } from \"./NewCreepBodys\";\r\nexport const newCreeps = {\r\n    /**\r\n     *\r\n     * @returns { number } 0 | -1\r\n     * @author LazyKitty\r\n     */\r\n    run: function () {\r\n        // delete dead creeps's memory\r\n        deleteDead();\r\n        if (Game.spawns.Spawn1.room.energyAvailable < 200) {\r\n            return 0;\r\n        }\r\n        // if harvesters less than sources, create it\r\n        let harvesters = _.filter(Game.creeps, (creep) => creep.memory.role == 'harvester');\r\n        let sourcesLength = globalStructure.sources.length;\r\n        if (harvesters.length < sourcesLength) {\r\n            newHarvester(harvesters, sourcesLength);\r\n            return 0;\r\n        }\r\n        // if builders less than 1 and sites exist, creat it\r\n        let builders = _.filter(Game.creeps, (creep) => creep.memory.role == 'builder');\r\n        let sites = Game.spawns.Spawn1.room.find(FIND_CONSTRUCTION_SITES);\r\n        if (sites.length != 0 && builders.length < 1) {\r\n            newBuilder();\r\n            return 0;\r\n        }\r\n        // if upgrader less than 1, creat it\r\n        let upgraders = _.filter(Game.creeps, (creep) => creep.memory.role == 'upgrader');\r\n        let storageEnergy = Game.spawns.Spawn1.room.storage.store[RESOURCE_ENERGY];\r\n        let upgradersNum = sites.length > 0 && storageEnergy < 100000 ? 1 : 2;\r\n        if (upgraders.length < upgradersNum) {\r\n            newUpgrader();\r\n            return 0;\r\n        }\r\n        // if transfers less than sources's length * 2, creat it\r\n        // if link exist, transfer's number equal sources's length\r\n        let transfers = _.filter(Game.creeps, (creep) => creep.memory.role == 'transfer');\r\n        let transferNum = globalStructure.links[0] == undefined ? sourcesLength : sourcesLength * 2;\r\n        if (globalStructure.containers.length > 1 && transfers.length < transferNum) {\r\n            newTransfer(transfers, sourcesLength);\r\n            return 0;\r\n        }\r\n        // if repairer less than 1, creat it\r\n        let repairer = _.filter(Game.creeps, (creep) => creep.memory.role == 'repairer');\r\n        if (globalStructure.containers.length > 1 && repairer.length < 1) {\r\n            newRepairer();\r\n            return 0;\r\n        }\r\n        return -1;\r\n    }\r\n};\r\nfunction deleteDead() {\r\n    // delete dead creeps\r\n    for (let name in Memory.creeps) {\r\n        if (!Game.creeps[name]) {\r\n            delete Memory.creeps[name];\r\n        }\r\n    }\r\n}\r\nfunction newHarvester(harvesters, sourcesLength) {\r\n    let newName = 'Harvester' + Game.time;\r\n    let posFlag = 0;\r\n    for (let i = 0; i < sourcesLength; ++i) {\r\n        for (let j = 0; j < harvesters.length; ++j) {\r\n            if (i == harvesters[j].memory.sourcesPosition) {\r\n                posFlag += 1;\r\n                break;\r\n            }\r\n        }\r\n        if (posFlag == i)\r\n            break;\r\n    }\r\n    if (posFlag >= sourcesLength)\r\n        return;\r\n    Game.spawns['Spawn1'].spawnCreep(newCreepBody('harvester'), newName, {\r\n        memory: { role: 'harvester', sourcesPosition: posFlag }\r\n    });\r\n}\r\nfunction newUpgrader() {\r\n    let newName = 'Upgrader' + Game.time;\r\n    Game.spawns['Spawn1'].spawnCreep(newCreepBody('upgrader'), newName, {\r\n        memory: { role: 'upgrader' }\r\n    });\r\n}\r\nfunction newBuilder() {\r\n    let newName = 'Builder' + Game.time;\r\n    Game.spawns['Spawn1'].spawnCreep(newCreepBody('builder'), newName, {\r\n        memory: { role: 'builder' }\r\n    });\r\n}\r\nfunction newTransfer(transfer, sourcesLength) {\r\n    let newName = 'Transfer' + Game.time;\r\n    let posFlag = 0;\r\n    let temp = 0;\r\n    let transferNum = globalStructure.links[0] == undefined ? 1 : 2;\r\n    for (let i = 0; i < sourcesLength; ++i) {\r\n        for (let j = 0; j < transfer.length; ++j) {\r\n            if (transfer[j].memory.sourcesPosition == i) {\r\n                temp += 1;\r\n                if (temp == transferNum) {\r\n                    posFlag += 1;\r\n                    temp = 0;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (posFlag == i)\r\n            break;\r\n    }\r\n    if (posFlag >= sourcesLength)\r\n        return;\r\n    Game.spawns['Spawn1'].spawnCreep(newCreepBody('transfer'), newName, { memory: {\r\n            role: 'transfer',\r\n            sourcesPosition: posFlag,\r\n        } });\r\n}\r\nfunction newRepairer() {\r\n    let newName = 'Repairer' + Game.time;\r\n    Game.spawns['Spawn1'].spawnCreep(newCreepBody('repairer'), newName, {\r\n        memory: { role: 'repairer' }\r\n    });\r\n}\r\n//# sourceMappingURL=NewCreeps.js.map","references":["D:/Desktop/ScreepsCodes/World/src/global/GlobalStructure.ts","D:/Desktop/ScreepsCodes/World/src/NewCreep/NewCreepBodys.ts"],"map":"{\"version\":3,\"file\":\"NewCreeps.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/NewCreep/NewCreeps.ts\"],\"names\":[],\"mappings\":\"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\"}"}
