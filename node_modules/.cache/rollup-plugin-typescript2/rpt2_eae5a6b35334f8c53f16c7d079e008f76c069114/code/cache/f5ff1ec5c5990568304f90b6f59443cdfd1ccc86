{"code":"export const globalStructure = {\r\n    sources: Object.values(Game.rooms)[0].find(FIND_SOURCES),\r\n    structures: Object.values(Game.rooms)[0].find(FIND_STRUCTURES),\r\n    containers: Object.values(Game.rooms)[0].find(FIND_STRUCTURES, { filter: structure => structure.structureType == STRUCTURE_CONTAINER }),\r\n    links: Object.values(Game.rooms)[0].find(FIND_STRUCTURES, { filter: structure => structure.structureType == STRUCTURE_LINK }),\r\n    fromLinks: creatLinks('from'),\r\n    toLinks: creatLinks('to'),\r\n    refresh: function () {\r\n        globalStructure.structures = Game.spawns.Spawn1.room.find(FIND_STRUCTURES);\r\n        globalStructure.containers = globalStructure.structures.filter(structure => structure.structureType == STRUCTURE_CONTAINER);\r\n        globalStructure.links = globalStructure.structures.filter(structure => structure.structureType == STRUCTURE_LINK);\r\n        this.fromLinks = [];\r\n        this.toLinks = [];\r\n        for (let i = 0; i < globalStructure.links.length; ++i) {\r\n            if (this.links[i].pos.findInRange(this.sources, 3)[0] != undefined) {\r\n                this.fromLinks.push(this.links[i]);\r\n            }\r\n            else {\r\n                this.toLinks.push(this.links[i]);\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction creatLinks(context) {\r\n    let from = [];\r\n    let to = [];\r\n    for (let i = 0; i < globalStructure.links.length; ++i) {\r\n        if (this.links[i].pos.findInRange(this.sources, 3)[0] != undefined) {\r\n            from.push(this.links[i]);\r\n        }\r\n        else {\r\n            to.push(this.links[i]);\r\n        }\r\n    }\r\n    switch (context) {\r\n        case 'from': return from;\r\n        case 'to': return to;\r\n    }\r\n}\r\n//# sourceMappingURL=GlobalStructure.js.map","references":[],"map":"{\"version\":3,\"file\":\"GlobalStructure.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/global/GlobalStructure.ts\"],\"names\":[],\"mappings\":\"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\"}"}
