{"code":"export const roleHealer = {\r\n    run: function (creep) {\r\n        let injured = creep.pos.findClosestByPath(FIND_MY_CREEPS, { filter: (creeps) => creeps.hits < creeps.hitsMax && creeps.room == creep.room });\r\n        if (injured == undefined) {\r\n            let enemy = creep.room.find(FIND_HOSTILE_CREEPS);\r\n            if (enemy[0] == undefined) {\r\n                return;\r\n            }\r\n            else {\r\n                let attacker = creep.pos.findClosestByPath(FIND_MY_CREEPS, { filter: (creeps) => creeps.memory.role == 'attacker' });\r\n                creep.moveTo(attacker);\r\n            }\r\n        }\r\n        else {\r\n            if (creep.heal(injured) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(injured);\r\n            }\r\n        }\r\n    }\r\n};\r\n//# sourceMappingURL=RoleHealer.js.map","references":[],"map":"{\"version\":3,\"file\":\"RoleHealer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Role/RoleHealer.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,GAAG,EAAG,UAAS,KAAK;QAClB,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,cAAc,EAAE,EAAC,MAAM,EAC/D,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAC,CAAC,CAAC;QAC1E,IAAI,OAAO,IAAI,SAAS,EAAE;YACxB,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACjD,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;gBACzB,OAAO;aACR;iBAAM;gBACL,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,cAAc,EAAE,EAAC,MAAM,EAChE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,UAAU,EAAC,CAAC,CAAC;gBACjD,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACxB;SACF;aAAM;YACL,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,gBAAgB,EAAE;gBAC3C,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACvB;SACF;IACH,CAAC;CAEF,CAAA\"}"}
