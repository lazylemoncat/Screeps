{"code":"import { newCreepBody } from \"../NewCreep/NewCreepBodys\";\r\nimport { roleTransfer } from \"../Role/RoleTransfer\";\r\nimport { tasks } from \"./Tasks\";\r\nexport const transferTask = {\r\n    run: function (room) {\r\n        newTransfer(room);\r\n        let withdrawTask = tasks.returnWithdraw(room);\r\n        let transferTask = tasks.returnTransfer(room);\r\n        let transferIndex = 0;\r\n        let withdrawIndex = 0;\r\n        for (let i = 0; i < Memory.roles.transfers.length; ++i) {\r\n            let transfer = Game.getObjectById(Memory.roles.transfers[i]);\r\n            if (transfer.memory.carrierTarget != null) {\r\n                if (roleTransfer.isTransfering(transfer)) {\r\n                    roleTransfer.goTransfer(transfer, transfer.memory.carrierTarget);\r\n                }\r\n                else {\r\n                    roleTransfer.goWithdraw(transfer, transfer.memory.carrierTarget);\r\n                }\r\n                continue;\r\n            }\r\n            if (roleTransfer.isTransfering(transfer)) {\r\n                roleTransfer.goTransfer(transfer, transferTask[transferIndex++]);\r\n            }\r\n            else {\r\n                roleTransfer.goWithdraw(transfer, withdrawTask[withdrawIndex++]);\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction newTransfer(room) {\r\n    if (Game.spawns['Spawn1'].memory.shouldSpawn != null) {\r\n        return;\r\n    }\r\n    let harvesters = Memory.roles.harvesters;\r\n    let transfers = Memory.roles.transfers;\r\n    let sources = room.sources;\r\n    if (transfers.length >= harvesters.length || transfers.length >= sources.length) {\r\n        return;\r\n    }\r\n    Game.spawns['Spawn1'].memory.shouldSpawn = 'transfer';\r\n    let newName = 'Transfer' + Game.time;\r\n    Game.spawns['Spawn1'].spawnCreep(newCreepBody('transfer'), newName, { memory: {\r\n            role: 'transfer',\r\n        } });\r\n}\r\n//# sourceMappingURL=TransferTask.js.map","references":["D:/Desktop/ScreepsCodes/World/src/NewCreep/NewCreepBodys.ts","D:/Desktop/ScreepsCodes/World/src/Role/RoleTransfer.ts","D:/Desktop/ScreepsCodes/World/src/Tasks/Tasks.ts"],"map":"{\"version\":3,\"file\":\"TransferTask.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Tasks/TransferTask.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,GAAG,EAAE,UAAS,IAAgB;QAC5B,WAAW,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,YAAY,GAA4B,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACvE,IAAI,YAAY,GAAoB,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACtD,IAAI,QAAQ,GAAU,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,IAAI,QAAQ,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,EAAE;gBACzC,IAAI,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;oBACxC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,aAA8B,CAAC,CAAC;iBACnF;qBAAM;oBACL,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;iBACjE;gBACD,SAAS;aACV;YACD,IAAI,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;gBACxC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;aAClE;iBAAM;gBACL,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;aAClE;SACF;IACH,CAAC;CACF,CAAA;AAED,SAAS,WAAW,CAAC,IAAgB;IACnC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,EAAE;QACpD,OAAO;KACR;IACD,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;IACzC,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;IACvC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC3B,IAAI,SAAS,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;QAC7E,OAAO;KACV;IACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC;IAEtD,IAAI,OAAO,GAAW,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;IAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE;YAC3E,IAAI,EAAE,UAAU;SAAE,EAAC,CAAC,CAAC;AACzB,CAAC\"}"}
