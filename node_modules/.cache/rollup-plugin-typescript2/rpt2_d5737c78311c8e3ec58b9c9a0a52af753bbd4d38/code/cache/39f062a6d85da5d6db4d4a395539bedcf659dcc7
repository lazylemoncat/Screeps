{"code":"export const memoryRoom = {\r\n    refresh: function () {\r\n        for (let name in Game.rooms) {\r\n            let structures = Game.rooms[name].find(FIND_STRUCTURES);\r\n            Memory.rooms[name] = {\r\n                sources: Game.rooms[name].find(FIND_SOURCES).map(source => source.id),\r\n                structures: structures.map(structure => structure.id),\r\n                spawns: structures.filter(structure => structure.structureType == STRUCTURE_SPAWN).\r\n                    map(structure => structure.id),\r\n                sites: Game.rooms[name].find(FIND_CONSTRUCTION_SITES).map(site => site.id),\r\n                containers: structures.filter(structure => structure.structureType == STRUCTURE_CONTAINER).\r\n                    map(structure => structure.id),\r\n                links: structures.filter(structure => structure.structureType == STRUCTURE_LINK).\r\n                    map(structure => structure.id),\r\n                // harvested energy fromLink~toLink\r\n                fromLinks: creatLinks('from'),\r\n                toLinks: creatLinks('to'),\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction creatLinks(context) {\r\n    let from = [];\r\n    let to = [];\r\n    let links = Object.values(Game.rooms)[0].find(FIND_STRUCTURES, { filter: structure => structure.structureType == STRUCTURE_LINK });\r\n    let sources = Object.values(Game.rooms)[0].find(FIND_SOURCES);\r\n    for (let i = 0; i < links.length; ++i) {\r\n        if (links[i].pos.findInRange(sources, 3)[0] != undefined) {\r\n            from.push(links[i]);\r\n        }\r\n        else {\r\n            to.push(links[i]);\r\n        }\r\n    }\r\n    switch (context) {\r\n        case 'from': return from;\r\n        case 'to': return to;\r\n    }\r\n    return [];\r\n}\r\n//# sourceMappingURL=MemoryRoom.js.map","references":[],"map":"{\"version\":3,\"file\":\"MemoryRoom.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/MyMemory/MemoryRoom.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,OAAO,EAAE;QACP,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC1B,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACxD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;gBACnB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;gBACrE,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAuB;gBAC3E,MAAM,EAAE,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,IAAI,eAAe,CAAC;oBAChF,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;gBAChC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC1E,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,IAAI,mBAAmB,CAAC;oBACxF,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;gBAChC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,IAAI,cAAc,CAAC;oBAC9E,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;gBAChC,mCAAmC;gBACnC,SAAS,EAAE,UAAU,CAAC,MAAM,CAAC;gBAC7B,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC;aAC1B,CAAC;SACH;IACH,CAAC;CACF,CAAA;AAED,SAAS,UAAU,CAAC,OAAe;IACjC,IAAI,IAAI,GAAoB,EAAE,CAAC;IAC/B,IAAI,EAAE,GAAmB,EAAE,CAAC;IAC5B,IAAI,KAAK,GAAoB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,EAAC,MAAM,EAAE,SAAS,CAAC,EAAE,CACnG,SAAS,CAAC,aAAa,IAAI,cAAc,EAAC,CAAC,CAAC;IAC9C,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACrC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;YACxD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACrB;aAAM;YACL,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACnB;KACF;IACD,QAAQ,OAAO,EAAE;QACf,KAAK,MAAM,CAAC,CAAC,OAAO,IAAI,CAAC;QACzB,KAAK,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;KACtB;IACD,OAAO,EAAE,CAAC;AACZ,CAAC\"}"}
