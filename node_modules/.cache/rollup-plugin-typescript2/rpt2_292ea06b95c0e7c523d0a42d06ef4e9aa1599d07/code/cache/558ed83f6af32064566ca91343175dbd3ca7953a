{"code":"import { globalStructure } from \"@/global/GlobalStructure\";\r\nexport const roleHarvester = {\r\n    run: function (creep) {\r\n        let transfering = false;\r\n        if (creep.store.getFreeCapacity() == 0) {\r\n            transfering = transferEnergy(creep);\r\n        }\r\n        goHarvest(creep, transfering);\r\n    }\r\n};\r\nfunction goHarvest(creep, transfering) {\r\n    let source = globalStructure.sources[creep.memory.sourcesPosition];\r\n    if (!creep.pos.isNearTo(source)) {\r\n        creep.moveTo(source);\r\n        return;\r\n    }\r\n    if (source.energy == 0 ||\r\n        creep.store.getFreeCapacity(RESOURCE_ENERGY) == 0 && !transfering) {\r\n        return;\r\n    }\r\n    let container = creep.pos.findInRange(globalStructure.containers, 1);\r\n    if (container[0] != undefined) {\r\n        if (!creep.pos.isEqualTo(container[0])) {\r\n            creep.moveTo(container[0]);\r\n        }\r\n    }\r\n    creep.harvest(source);\r\n}\r\nfunction transferEnergy(creep) {\r\n    if (transfer(creep)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return creep.transferTo(creep);\r\n    }\r\n}\r\nfunction transfer(creep) {\r\n    let link = creep.pos.findInRange(globalStructure.fromLinks, 1)[0];\r\n    if (link != undefined) {\r\n        if (creep.transfer(link, RESOURCE_ENERGY) == OK) {\r\n            return true;\r\n        }\r\n    }\r\n    let source = globalStructure.sources[creep.memory.sourcesPosition];\r\n    let container = globalStructure.containers.filter(structure => structure.pos.isNearTo(source))[0];\r\n    if (container != undefined) {\r\n        if (creep.transfer(container, RESOURCE_ENERGY) == OK) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=RoleHarvester.js.map","references":["D:/Desktop/ScreepsCodes/World/src/global/GlobalStructure.ts"],"map":"{\"version\":3,\"file\":\"RoleHarvester.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Role/RoleHarvester.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAE3D,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,GAAG,EAAE,UAAS,KAAY;QACxB,IAAI,WAAW,GAAY,KAAK,CAAC;QACjC,IAAI,KAAK,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE;YACtC,WAAW,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;SACrC;QACD,SAAS,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IACjC,CAAC;CACD,CAAC;AAEF,SAAS,SAAS,CAAC,KAAY,EAAE,WAAoB;IACnD,IAAI,MAAM,GAAW,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAC3E,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC/B,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACrB,OAAO;KACR;IACD,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC;QAClB,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;QACrE,OAAO;KACR;IACD,IAAI,SAAS,GAAyB,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAC3F,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;QAC7B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YACtC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5B;KACF;IACD,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxB,CAAC;AAED,SAAS,cAAc,CAAC,KAAY;IAClC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;QACnB,OAAO,IAAI,CAAC;KACb;SAAM;QACL,OAAO,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KAChC;AACH,CAAC;AAED,SAAS,QAAQ,CAAC,KAAY;IAC5B,IAAI,IAAI,GAAkB,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,IAAI,IAAI,IAAI,SAAS,EAAE;QACrB,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,EAAE;YAC/C,OAAO,IAAI,CAAC;SACb;KACF;IACD,IAAI,MAAM,GAAW,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAC3E,IAAI,SAAS,GAAuB,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAChF,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,IAAI,SAAS,IAAI,SAAS,EAAE;QAC1B,IAAI,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,eAAe,CAAC,IAAI,EAAE,EAAE;YACpD,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC\"}"}
