{"version":3,"file":"main.js","sources":["../src/Role/RoleHarvester.ts","../src/Role/RoleBuilder.ts","../src/Role/RoleUpgrader.ts","../src/Role/RoleAttacker.js","../src/Role/RoleHealer.js","../src/Role/RoleRepairer.ts","../src/Role/RoleTransfer.ts","../src/Structure/StructureTower.ts","../src/NewCreep/NewCreepBodys.ts","../src/NewCreep/NewCreeps.ts","../src/main.ts"],"sourcesContent":["export const roleHarvester = {\n  run: function(creep: Creep): void {\n    // if harvester went into the wrong room\n    if (backRoom(creep) == 0) {\n      return;\n    }\n    if(!creep.memory.harvesting && creep.store[RESOURCE_ENERGY] == 0) {\n      creep.memory.harvesting = true;\n    } else if(creep.memory.harvesting && creep.store.getFreeCapacity() == 0) {\n      creep.memory.harvesting = false;\n    }\n    // if harvester's free capacity more than 0, harvest energy\n    if(creep.memory.harvesting) {\n      goHarvest(creep);\n    } else {\n      transferEnergy(creep);\n    }\n\t}\n};\n\nfunction backRoom(creep: Creep): number {\n  if (creep.room != Game.spawns[\"Spawn1\"].room) {\n    creep.moveTo(Game.spawns[\"Spawn1\"]);\n    return 0;\n  } else {\n    return -1;\n  }\n}\n\nfunction goHarvest(creep: Creep): void {\n  let targetSource: _HasId = Game.getObjectById(creep.memory.sourcesPosition);\n  if(creep.harvest(targetSource as Source) == ERR_NOT_IN_RANGE) {\n    creep.moveTo(targetSource as Source);\n  }\n}\n\nfunction transferEnergy(creep: Creep): void {\n  let source: _HasId = Game.getObjectById(creep.memory.sourcesPosition);\n  let container: StructureContainer = (source as Source).pos.findClosestByPath(FIND_STRUCTURES, {\n    filter: (structure) => structure.structureType == STRUCTURE_CONTAINER\n  });\n  if (container != undefined && container.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n    if (creep.transfer(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n      creep.moveTo(container);\n    }\n    return;\n  }\n\n  let structures: AnyStructure[] = creep.room.find(FIND_STRUCTURES, {\n    filter: (structure) => {return (structure.structureType == STRUCTURE_STORAGE ||\n    structure.structureType == STRUCTURE_CONTAINER ||\n    structure.structureType == STRUCTURE_EXTENSION ||\n    structure.structureType == STRUCTURE_SPAWN ||\n    structure.structureType == STRUCTURE_TOWER)\n    && structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\n    }\n  });\n\n  let transferTo: AnyStructure[] = structures.filter(structure => \n    structure.structureType == STRUCTURE_EXTENSION);\n  let target: AnyStructure;\n  if (transferTo[0] == undefined) {\n    target = creep.pos.findClosestByPath(structures);\n  } else {\n    target = creep.pos.findClosestByPath(transferTo);\n  }\n\n  if (creep.transfer(target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n    creep.moveTo(target);\n  }\n}","export const roleBuilder = {\n  run: function (creep: Creep): void {\n    if (backRoom(creep) == 0) {\n      return;\n    }\n    if(creep.memory.building && creep.store[RESOURCE_ENERGY] == 0) {\n      creep.memory.building = false;\n    } else if(!creep.memory.building && creep.store.getFreeCapacity() == 0) {\n      creep.memory.building = true;\n    }\n\n    if(creep.memory.building) {\n      goBuild(creep);\n    } else {\n      goGetEnergy(creep);\n    }\n\t}\n};\n\nfunction backRoom(creep: Creep): number {\n  if (creep.room != Game.spawns[\"Spawn1\"].room) {\n    creep.moveTo(Game.spawns[\"Spawn1\"]);\n    return 0;\n  } else {\n    return -1;\n  }\n}\n\nfunction goBuild(creep: Creep): void {\n  let target: ConstructionSite[] = creep.room.find(FIND_CONSTRUCTION_SITES);\n    if(target[0]) {\n      if(creep.build(target[0]) == ERR_NOT_IN_RANGE) {\n        creep.moveTo(target[0], {visualizePathStyle: {stroke: '#ffffff'}});\n      }\n    }\n}\n\nfunction goGetEnergy(creep: Creep): void {\n  let targetStore: AnyStoreStructure = creep.pos.findClosestByPath(FIND_STRUCTURES, \n    {filter: (structure) => {return (structure.structureType == STRUCTURE_CONTAINER ||\n    structure.structureType == STRUCTURE_STORAGE) &&\n    structure.store[RESOURCE_ENERGY] > 0}});\n\n  if (targetStore != null) {\n    if (creep.withdraw(targetStore, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n      creep.moveTo(targetStore);\n    }\n    return;\n  }\n  let soureces: Source[] = creep.room.find(FIND_SOURCES, {filter :\n    (sources) => sources.energy > 0});\n  if (creep.harvest(soureces[0]) == ERR_NOT_IN_RANGE) {\n    creep.moveTo(soureces[0], {visualizePathStyle: {stroke: '#ffaa00'}});\n  }\n  return;\n}","export const roleUpgrader = {\n  run: function(creep: Creep): void {\n    if(creep.memory.upgrading && creep.store[RESOURCE_ENERGY] == 0) {\n      creep.memory.upgrading = false;\n    }\n    if(!creep.memory.upgrading && creep.store.getFreeCapacity() == 0) {\n      creep.memory.upgrading = true;\n    }\n\n    if(creep.memory.upgrading) {\n      isNearToTarget(creep);\n      goUpgrade(creep);\n    } else {\n      goGetEnergy(creep);\n    }\n\t}\n};\n\nfunction goUpgrade(creep: Creep): void {\n  if(creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\n    creep.moveTo(creep.room.controller);\n  }\n}\n\nfunction goGetEnergy(creep: Creep): void {\n  let targetContainer: AnyStructure = creep.pos.findClosestByPath(FIND_STRUCTURES, {filter :\n    (structure) => (structure.structureType == STRUCTURE_CONTAINER ||\n    structure.structureType == STRUCTURE_STORAGE) &&\n    structure.store[RESOURCE_ENERGY] > 0});\n  if (targetContainer == undefined) {\n    let target: Source = creep.pos.findClosestByPath(FIND_SOURCES,{filter :\n      (sources) => sources.energy > 0});\n    if (creep.harvest(target) == ERR_NOT_IN_RANGE) {\n      creep.moveTo(target);\n    }\n  } else if (creep.withdraw(targetContainer, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n    creep.moveTo(targetContainer);\n  }\n}\n\nfunction isNearToTarget(creep: Creep): void {\n  let closestSource: Source = creep.pos.findClosestByPath(FIND_SOURCES);\n  if (creep.pos.isNearTo(closestSource)) {\n    creep.moveTo(creep.room.controller);\n  }\n}","export const roleAttacker = {\r\n  run : function (creep) {\r\n    // let enemy = creep.room.find(FIND_HOSTILE_CREEPS);\r\n    // if (enemy[0] == undefined) {\r\n    //   return;\r\n    // } else {\r\n    //   goAttack(creep, enemy);\r\n    // }\r\n    if(creep.pos.roomName != creep.memory.room) {\r\n      let pos = Game.flags.Flag1.pos;\r\n      if (creep.moveTo(pos) == ERR_NO_PATH) {\r\n        let target = creep.pos.findClosestByPath(FIND_STRUCTURES);\r\n        creep.attack(target);\r\n      }\r\n      /* creep.moveTo(Game.getObjectById('63b529848d21f8ad5fe698c6').pos);\r\n      creep.attack(Game.getObjectById('63b529848d21f8ad5fe698c6')); */\r\n      return;\r\n  }\r\n    let enemy = creep.room.find(FIND_HOSTILE_CREEPS);\r\n    if (enemy[0] == undefined) {\r\n      enemy = creep.room.find(FIND_HOSTILE_STRUCTURES, {filter:\r\n        (structure) => structure.structureType == STRUCTURE_TOWER});\r\n      if (enemy[0] == undefined) {\r\n        return;\r\n      }\r\n      goAttack(creep, enemy);\r\n    } else {\r\n      goAttack(creep, enemy);\r\n    }\r\n  }\r\n}\r\n\r\nfunction goAttack(creep, enemy) {\r\n  let target = creep.pos.findClosestByPath(enemy);\r\n  if (creep.attack(target) == ERR_NOT_IN_RANGE) {\r\n    creep.moveTo(target);\r\n  }\r\n}","export const roleHealer = {\r\n  run : function(creep) {\r\n    let injured = creep.pos.findClosestByPath(FIND_MY_CREEPS, {filter :\r\n      (creeps) => creeps.hits < creeps.hitsMax && creeps.room == creep.room});\r\n    if (injured == undefined) {\r\n      let enemy = creep.room.find(FIND_HOSTILE_CREEPS);\r\n      if (enemy[0] == undefined) {\r\n        return;\r\n      } else {\r\n        let attacker = creep.pos.findClosestByPath(FIND_MY_CREEPS, {filter :\r\n          (creeps) => creeps.memory.role == 'attacker'});\r\n        creep.moveTo(attacker);\r\n      }\r\n    } else {\r\n      if (creep.heal(injured) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(injured);\r\n      }\r\n    }\r\n  }\r\n  \r\n}","export const roleRepairer = {\r\n  run: function(creep: Creep): void {\r\n    if(creep.memory.repairing && creep.store[RESOURCE_ENERGY] == 0) {\r\n      creep.memory.repairing = false;\r\n    } else if(!creep.memory.repairing && creep.store.getFreeCapacity() == 0) {\r\n      creep.memory.repairing = true;\r\n    }\r\n\r\n    if (creep.memory.repairing) {\r\n      goRepair(creep);\r\n      backRoom(creep);\r\n    } else {\r\n      goGetEnergy(creep);\r\n    }\r\n  }\r\n}\r\n\r\nfunction backRoom(creep: Creep): void {\r\n  if (creep.room != Game.spawns[\"Spawn1\"].room) {\r\n    creep.moveTo(Game.spawns[\"Spawn1\"]);\r\n  }\r\n}\r\n\r\nfunction goRepair(creep: Creep): void {\r\n  let targetTo: AnyStructure = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n    filter: object => object.hits < object.hitsMax &&\r\n    object.structureType != STRUCTURE_WALL});\r\n  if (creep.repair(targetTo) == ERR_NOT_IN_RANGE) {\r\n    creep.moveTo(targetTo);\r\n  }\r\n}\r\n\r\nfunction goGetEnergy(creep: Creep): void {\r\n  let targetEnergy: AnyStoreStructure = creep.pos.findClosestByPath(FIND_STRUCTURES, \r\n    {filter: (structure) => {return (structure.structureType == STRUCTURE_CONTAINER ||\r\n    structure.structureType == STRUCTURE_STORAGE)\r\n    && structure.store[RESOURCE_ENERGY] > 0}});\r\n  if (targetEnergy == null) {\r\n    let targetsource: Source = creep.pos.findClosestByPath(FIND_SOURCES);\r\n    if(creep.harvest(targetsource) == ERR_NOT_IN_RANGE) {\r\n      creep.moveTo(targetsource);\r\n    }\r\n  } else {\r\n    if (creep.withdraw(targetEnergy, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n      creep.moveTo(targetEnergy);\r\n      }\r\n  }\r\n}","export const roleTransfer = {\r\n  run: function(creep: Creep): void {\r\n    if(creep.memory.transfering && creep.store[RESOURCE_ENERGY] == 0) {\r\n      creep.memory.transfering = false;\r\n    }\r\n    if(!creep.memory.transfering && creep.store.getFreeCapacity() == 0) {\r\n      creep.memory.transfering = true;\r\n    }\r\n\r\n    if (backRoom(creep) == 0) {\r\n      return;\r\n    }\r\n    if (creep.memory.transfering) {\r\n      goTransfer(creep);\r\n    } else {\r\n      goWithdraw(creep);\r\n    }\r\n  }\r\n}\r\n\r\nfunction backRoom(creep: Creep): number {\r\n  if (creep.room != Game.spawns[\"Spawn1\"].room) {\r\n    creep.moveTo(Game.spawns[\"Spawn1\"]);\r\n    return 0;\r\n  } else {\r\n    return -1;\r\n  }\r\n}\r\n\r\n\r\nfunction goTransfer(creep: Creep): void {\r\n  let structures: AnyStructure[] = creep.room.find(FIND_STRUCTURES);\r\n  let target: AnyStructure[] = structures.filter(structure => \r\n    (structure.structureType == STRUCTURE_EXTENSION ||\r\n    structure.structureType == STRUCTURE_SPAWN) &&\r\n    structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0 );\r\n  if (target[0] != undefined) {\r\n    if (creep.transfer(target[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n      creep.moveTo(target[0]);\r\n    }\r\n    return;\r\n  }\r\n\r\n  target = structures.filter(structure => \r\n    (structure.structureType == STRUCTURE_TOWER) &&\r\n    structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0);\r\n  if (target[0] != undefined) {\r\n    if (creep.transfer(target[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n      creep.moveTo(target[0]);\r\n    }\r\n    return;\r\n  }\r\n\r\n  target = structures.filter(structure =>\r\n    (structure.structureType == STRUCTURE_CONTAINER &&\r\n    structure.pos.isNearTo(structure.pos.findClosestByPath(FIND_SOURCES)) == false) ||\r\n    structure.structureType == STRUCTURE_STORAGE &&\r\n    structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0);\r\n  if (creep.transfer(target[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n    creep.moveTo(target[0]);\r\n  }\r\n}\r\n\r\nfunction goWithdraw(creep: Creep): void {\r\n  let targetSource: _HasId = Game.getObjectById(creep.memory.sourcesPosition);\r\n  let targetContainer: AnyStructure = (targetSource as Source).pos.findClosestByPath(FIND_STRUCTURES, {filter:\r\n    (structure) => (structure.structureType == STRUCTURE_CONTAINER)});\r\n  if (targetContainer == null || (targetContainer as StructureContainer).store[RESOURCE_ENERGY] == 0) {\r\n    targetContainer = creep.pos.findClosestByPath(FIND_STRUCTURES, {filter:\r\n      (structure) => (structure.structureType == STRUCTURE_CONTAINER ||\r\n      structure.structureType == STRUCTURE_STORAGE)&&\r\n      structure.store[RESOURCE_ENERGY] > 0\r\n    });\r\n  }\r\n  if (creep.withdraw(targetContainer, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n    creep.moveTo(targetContainer);\r\n  }\r\n}","export const structureTower = {\r\n  run: function (tower: StructureTower): void {\r\n    let enemy: Creep[] = tower.room.find(FIND_HOSTILE_CREEPS);\r\n    let injured: Creep[] = tower.room.find(FIND_MY_CREEPS, {filter :\r\n      (creeps) => creeps.hits < creeps.hitsMax && creeps.room == creeps.room});\r\n    if (enemy[0] != undefined) {\r\n      goAttack(tower, enemy);\r\n    } else if (injured[0] != undefined) {\r\n      tower.heal(injured[0]);\r\n    } else {\r\n      runRepair(tower);\r\n    }\r\n  }\r\n};\r\n\r\nfunction goAttack(tower: StructureTower, enemy: Creep[]): void {\r\n  let target: Creep = tower.pos.findClosestByPath(enemy);\r\n  tower.attack(target);\r\n}\r\n\r\nfunction runRepair (tower: StructureTower): void {\r\n  let targetTo: AnyStructure[] = tower.room.find(FIND_STRUCTURES, {\r\n    filter: object => object.hits < object.hitsMax &&\r\n    object.structureType != STRUCTURE_WALL});\r\n  tower.repair(targetTo[0]);\r\n}","export const newCreepBody = function(role: String): BodyPartConstant[] {\r\n  // MOVE 50,WORK 100,CARRY 50,ATTACK 80,RANGED_ATTACK 150,HEAL 250,CLAIM 600,TOUGH 10\r\n  let capacity: number = Game.spawns.Spawn1.room.energyCapacityAvailable;\r\n  if (capacity == 300 || Object.getOwnPropertyNames(Memory.creeps).length < 7 ) {\r\n    switch (role) {\r\n      case 'harvester' : return [WORK, CARRY, MOVE, MOVE];\r\n      case 'upgrader' : return [WORK, CARRY, MOVE, MOVE];\r\n      case 'builder' : return [WORK, CARRY, MOVE, MOVE];\r\n      case 'transfer' : return [CARRY, CARRY, CARRY, MOVE, MOVE, MOVE];\r\n      case 'repairer' : return [WORK, CARRY, MOVE, MOVE];\r\n    }\r\n  } else {\r\n    switch (role) {\r\n      case 'harvester' : {\r\n        let bodys: BodyPartConstant[] = [];\r\n        capacity /= 50;\r\n        bodys.push(CARRY, WORK, MOVE);\r\n        capacity -= 4;\r\n        for (; capacity >= 5; capacity -= 5) {\r\n          bodys.push(WORK, WORK, MOVE);\r\n        }\r\n        return bodys;\r\n      }\r\n      case 'upgrader' : {\r\n        let bodys: BodyPartConstant[] = [];\r\n        capacity /= 50;\r\n        bodys.push(WORK, CARRY, MOVE);\r\n        capacity -= 4;\r\n        for (; capacity >= 5; capacity -= 5) {\r\n          bodys.push(WORK, WORK, MOVE);\r\n        }\r\n        return bodys;\r\n      }\r\n      case 'builder' : {\r\n        let bodys: BodyPartConstant[] = [];\r\n        for (capacity /= 50; capacity >= 4; capacity -= 4) {\r\n          bodys.push(WORK, CARRY, MOVE);\r\n        }\r\n        return bodys;\r\n      }\r\n      case 'transfer' : {\r\n        let bodys: BodyPartConstant[] = [];\r\n        for (capacity /= 50; capacity >= 3; capacity -= 3) {\r\n          bodys.push(MOVE, CARRY, CARRY);\r\n        }\r\n        return bodys;\r\n      }\r\n      case 'repairer' : {\r\n        let bodys: BodyPartConstant[] = [];\r\n        for (capacity /= 50; capacity >= 5; capacity -= 5) {\r\n          bodys.push(WORK, CARRY, MOVE, MOVE);\r\n        }\r\n        return bodys;\r\n      }\r\n    }\r\n  }\r\n}","import { newCreepBody } from \"./NewCreepBodys\";\r\n\r\nexport const newCreeps = {\r\n  run: function(): number {\r\n    // delete dead creeps's memory\r\n    deleteDead();\r\n    if (Game.spawns.Spawn1.room.energyAvailable < 200) {\r\n      return 0;\r\n    }\r\n    // if harvesters less than sources*2, create it\r\n    let harvesters: Creep[] = _.filter(Game.creeps, (creep) => creep.memory.role == 'harvester');\r\n    let sourcesLength: number = Game.spawns['Spawn1'].room.find(FIND_SOURCES).length;\r\n    if (harvesters.length < sourcesLength * 2) {\r\n      newHarvester(harvesters, sourcesLength);\r\n      return 0;\r\n    }\r\n    // if builders less than 1 and sites exist, creat it\r\n    let builders: Creep[] = _.filter(Game.creeps, (creep) => creep.memory.role == 'builder');\r\n    let sites: ConstructionSite[] = Game.spawns.Spawn1.room.find(FIND_CONSTRUCTION_SITES);\r\n    if (sites.length != 0 && builders.length < 1) {\r\n      newBuilder();\r\n      return 0;\r\n    }\r\n    // if upgrader less than 1, creat it\r\n    let upgraders: Creep[] = _.filter(Game.creeps, (creep) => creep.memory.role == 'upgrader');\r\n    if (upgraders.length < 1) {\r\n      newUpgrader();\r\n      return 0;\r\n    }\r\n    // if transfers less than sources's length, creat it\r\n    let transfers: Creep[] = _.filter(Game.creeps, (creep) => creep.memory.role == 'transfer');\r\n    let containers: Structure<StructureConstant>[] = _.filter(Game.structures, (structure) => structure.structureType == STRUCTURE_CONTAINER);\r\n    if (containers.length > 1 && transfers.length < sourcesLength) {\r\n      newTransfer(transfers, sourcesLength);\r\n      return 0;\r\n    }\r\n    // if repairer less than 1, creat it\r\n    let repairer: Creep[] = _.filter(Game.creeps, (creep) => creep.memory.role == 'repairer');\r\n    if (containers.length > 1 && repairer.length < 1) {\r\n      newRepairer();\r\n      return 0; \r\n    }\r\n    return -1;\r\n  }\r\n}\r\n\r\nfunction deleteDead () {\r\n  // delete dead creeps\r\n  for(let name in Memory.creeps) {\r\n    if(!Game.creeps[name]) {\r\n      delete Memory.creeps[name];\r\n    }\r\n  }\r\n}\r\n\r\nfunction newHarvester(harvesters: Creep[], sourcesLength: number) {\r\n  let newName: string = 'Harvester' + Game.time;\r\n  let closestSource: Source = Game.spawns[\"Spawn1\"].pos.findClosestByPath(FIND_SOURCES);\r\n  let sources: number[] = [];\r\n  let posFlag = 0;\r\n  for (let i = 0; i < sourcesLength; ++i) {\r\n    sources[i] = 0;\r\n  }\r\n  for (let i = 0; i < sourcesLength; ++i) {\r\n    if (closestSource == Game.spawns[\"Spawn1\"].room.find(FIND_SOURCES)[i]) {\r\n      posFlag = i;\r\n      break;\r\n    }\r\n  }\r\n  for (let i = 0; i < harvesters.length; ++i) {\r\n    for (let j = 0; j < sourcesLength; ++j) {\r\n      if (Game.spawns.Spawn1.room.find(FIND_SOURCES)[j].id == harvesters[i].memory.sourcesPosition) {\r\n        ++sources[j];\r\n      }\r\n    }\r\n  }\r\n  if (sources[posFlag] >= 2) {\r\n    for (let i = 0; i < sources.length; ++i) {\r\n      if (sources[i] < 2) {\r\n        posFlag = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  let source: Source[] = Game.spawns.Spawn1.room.find(FIND_SOURCES);\r\n  let sourcesPosition: String = source[posFlag].id;\r\n  Game.spawns['Spawn1'].spawnCreep(newCreepBody('harvester'), newName, {\r\n    memory: {role: 'harvester', sourcesPosition: sourcesPosition}});\r\n}\r\n\r\nfunction newUpgrader() {\r\n  let newName: string = 'Upgrader' + Game.time;\r\n  Game.spawns['Spawn1'].spawnCreep(newCreepBody('upgrader'), newName, {\r\n    memory: {role: 'upgrader'}});\r\n}\r\n\r\nfunction newBuilder() {\r\n  let newName: string = 'Builder' + Game.time;\r\n  Game.spawns['Spawn1'].spawnCreep(newCreepBody('builder'), newName, {\r\n    memory: {role: 'builder'}});\r\n}\r\n\r\nfunction newTransfer(transfer: Creep[], sourcesLength: number) {\r\n  let newName: string = 'Transfer' + Game.time;\r\n  let posFlag: number = 0;\r\n  let source: Source[] = Game.spawns.Spawn1.room.find(FIND_SOURCES);\r\n  let sources: number[] = [];\r\n  for (let i = 0; i < sourcesLength; ++i) {\r\n    sources[i] = 0;\r\n  }\r\n  for (let i = 0; i < transfer.length; ++i) {\r\n    for (let j = 0; j < sourcesLength; ++j) {\r\n      if (transfer[i].memory.sourcesPosition == source[j].id) {\r\n        ++sources[j];\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < sourcesLength; ++i) {\r\n    if (sources[i] == 0) {\r\n      posFlag = i;\r\n      break;\r\n    }\r\n  }\r\n  Game.spawns['Spawn1'].spawnCreep(newCreepBody('transfer'), newName, {memory: {\r\n    role: 'transfer', \r\n    sourcesPosition: Game.spawns[\"Spawn1\"].room.find(FIND_SOURCES)[posFlag].id,\r\n    }});\r\n}\r\n\r\nfunction newRepairer() {\r\n  let newName: string = 'Repairer' + Game.time;\r\n  Game.spawns['Spawn1'].spawnCreep(newCreepBody('repairer'), newName, {\r\n    memory: {role: 'repairer'}});\r\n}","import { roleHarvester } from './Role/RoleHarvester';\r\nimport { roleBuilder } from './Role/RoleBuilder';\r\nimport { roleUpgrader } from './Role/RoleUpgrader';\r\nimport { roleAttacker } from './Role/RoleAttacker';\r\nimport { roleHealer } from './Role/RoleHealer';\r\nimport { roleRepairer } from './Role/RoleRepairer';\r\nimport { roleTransfer } from './Role/RoleTransfer';\r\n\r\nimport { structureTower } from './Structure/StructureTower';\r\n\r\nimport { newCreeps } from './NewCreep/NewCreeps';\r\n\r\nexport const loop = function (): void {\r\n  // create new creeps\r\n  newCreeps.run()\r\n  // run creeps\r\n  for (let name in Game.creeps) {\r\n    let creep = Game.creeps[name];\r\n    if (creep.memory.role == 'harvester') {\r\n      roleHarvester.run(creep);\r\n    }\r\n    else if (creep.memory.role == 'upgrader') {\r\n      roleUpgrader.run(creep);\r\n    }\r\n    else if (creep.memory.role == 'builder') {\r\n      roleBuilder.run(creep);\r\n    }\r\n    else if (creep.memory.role == 'transfer') {\r\n      roleTransfer.run(creep);\r\n    }\r\n    else if (creep.memory.role == 'repairer') {\r\n      roleRepairer.run(creep);\r\n    }\r\n    else if (creep.memory.role == 'attacker') {\r\n      roleAttacker.run(creep);\r\n    }\r\n    else if (creep.memory.role == 'healer') {\r\n      roleHealer.run(creep);\r\n    }\r\n  }\r\n  // run structures\r\n  for (let name in Game.structures) {\r\n    let structure = Game.structures[name];\r\n    if (structure.structureType == STRUCTURE_TOWER) {\r\n      structureTower.run(structure as StructureTower);\r\n    }\r\n  }\r\n}"],"names":["backRoom","goGetEnergy","goAttack"],"mappings":"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"}